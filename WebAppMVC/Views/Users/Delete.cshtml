@model User

@inject IStringLocalizer<Program> StringLocalizer
@inject IHtmlLocalizer<Program> HtmlLocalizer
@inject IViewLocalizer ViewLocalizer


<div>
	<table class="table">
		<thead>
			<tr>

				<th> @Html.DisplayName(StringLocalizer[nameof(Entity.Id)]) </th>

				@* <th> @Html.DisplayNameFor(model => model.UserName) </th> *@ @* Tłumaczenie na podstawie adnotacji *@
				@* <th> @StringLocalizer["<i>{0}</i>",@Html.DisplayNameFor(model => model.UserName)] </th> *@ @* nie stosuje formatowania *@
				<th> @HtmlLocalizer["<i>{0}</i>",@Html.DisplayNameFor(model => model.UserName)] </th> @* stosuje formatowanie *@

				@* <th> <label>@nameof(Models.User.Password)</label> </th> *@
				<th> @Html.Label(@ViewLocalizer[nameof(Models.User.Password)].Value) </th> @* tłumaczenie związane z widokiem *@
			</tr>
		</thead>
		<tbody>
				<tr>
					<td>@Html.DisplayFor(model => model.Id)</td>
					<td>@Html.DisplayFor(model => model.UserName)</td>
					<td>@Model.Password</td>
				</tr>
		</tbody>
	</table>
</div>

<div>
<p>Czy chcesz usunąć wskazanego użytkownika?</p>

	@using(Html.BeginForm("deleteuser", "users"))
	{
		@* <input type="hidden" asp-for="@Model.Id"/> *@
		@Html.HiddenFor(x => x.Id);

		<input type="submit" value="Tak" class="btn"/>
		<a asp-action="Index" class="btn">Nie</a>
	}
</div>